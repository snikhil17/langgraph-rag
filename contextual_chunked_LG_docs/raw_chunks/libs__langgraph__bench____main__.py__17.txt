"""Latency for the first event.

Run the graph until the first event is processed and then stop."""
def run_first_event_latency(graph: Pregel, input: dict) -> None:
    """Latency for the first event.

    Run the graph until the first event is processed and then stop.
    """
    stream = graph.stream(
        input,
        {
            "configurable": {"thread_id": str(uuid4())},
            "recursion_limit": 1000000000,
        },
        checkpoint_during=False,
    )

    try:
        for _ in stream:
            break
    finally:
        stream.close()